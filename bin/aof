#!/usr/bin/python
"""
Usage:

    aof CMD [ --help | ... ]

where CMD is one of the following:

    neb                 Nudged Elastic Band calculation
    string              String optimization, similar to NEB
    growingstring
    searchingstring
    pathsearcher        Is capable of doing all of the above

See subcommand specific help for syntax details.

Examples:

    aof string --help
    aof string --calculator default_vasp POSCAR-A POSCAR-B

Search transition path between A and B using default VASP settings.
"""
import sys

def main(argv):
    """Subcommand dispatcher, depending on argv[0] call subcommand
    specific methods. To be used as main(sys.argv[1:]).
    """

    if len(argv) < 1:
        print >> sys.stderr, __doc__
        sys.exit(1)

    # first argument is the keyword for the subtask:
    cmd = argv[0]

    # is this a valid command?
    valid_cmd = False

    # the rest of the command line is delegated to the
    # subtask for interpretation:
    if cmd == "string" or cmd == "neb" or cmd == "growingstring" or cmd == "searchingstring":
        valid_cmd = True

        # import right here in order not to import everything,
        # while using only one specific method:
        from aof.inputs.pathsearcher import main as pathsearcher

        # prepend a flag for pathsearcher to understand the method:
        argv1 = ["--cos_type"] + argv
        print "aof: call pathsearcher(", argv1, ")"
        pathsearcher(argv1)

    if cmd == "pathsearcher":
        valid_cmd = True

        from aof.inputs.pathsearcher import main as pathsearcher
        print "aof: call pathsearcher(", argv[1:], ")"
        pathsearcher(argv[1:])

    if not valid_cmd:
        print >> sys.stderr, "aof: no such command:", cmd
        print >> sys.stderr, __doc__
        sys.exit(1)

if __name__ == "__main__":
    main(sys.argv[1:])

# Default options for vim:sw=4:expandtab:smarttab:autoindent:syntax
